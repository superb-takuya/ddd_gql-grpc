scalar Time

extend type Query {
  getUserByID(input:getUserByIDRequest!): getUserByIDResponse
}

extend type Mutation {
  createUser(input: CreateUserRequest!): CreateUserResponse!
  updateUser(input: UpdateUserRequest!): UpdateUserResponse!
  deleteUser(input: DeleteUserRequest!): DeleteUserResponse!
}

extend type User {
  uuid: String!
  name: String!
  email: String!
  password: String!
  telephoneNumber:String!
  gender: Int!
  createdAt: Time
  updatedAt: Time
}

input getUserByIDRequest{
  uuid: String!
}
type getUserByIDResponse{
  user: User!
}

input CreateUserRequest {
  name: String!
  email: String!
  password: String!
  telephoneNumber: String!
  gender: Int!
}
type CreateUserResponse {
  uuid: String!
}

input UpdateUserRequest {
  uuid: String!
  name: String!
  email: String!
  password: String!
  telephoneNumber: String!
  gender: Int!
}
type UpdateUserResponse {
  uuid: String!
}

input DeleteUserRequest {
  uuid: String!
}
type DeleteUserResponse {
  uuid: String!
}
