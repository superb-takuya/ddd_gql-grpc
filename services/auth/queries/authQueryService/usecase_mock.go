// Code generated by MockGen. DO NOT EDIT.
// Source: queries/authQueryService/usecase.go

// Package authqueryservice is a generated GoMock package.
package authqueryservice

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockUsecase is a mock of Usecase interface
type MockUsecase struct {
	ctrl     *gomock.Controller
	recorder *MockUsecaseMockRecorder
}

// MockUsecaseMockRecorder is the mock recorder for MockUsecase
type MockUsecaseMockRecorder struct {
	mock *MockUsecase
}

// NewMockUsecase creates a new mock instance
func NewMockUsecase(ctrl *gomock.Controller) *MockUsecase {
	mock := &MockUsecase{ctrl: ctrl}
	mock.recorder = &MockUsecaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockUsecase) EXPECT() *MockUsecaseMockRecorder {
	return m.recorder
}

// genToken mocks base method
func (m *MockUsecase) genToken(req genTokenRequest) (genTokenResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "genToken", req)
	ret0, _ := ret[0].(genTokenResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// genToken indicates an expected call of genToken
func (mr *MockUsecaseMockRecorder) genToken(req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "genToken", reflect.TypeOf((*MockUsecase)(nil).genToken), req)
}
